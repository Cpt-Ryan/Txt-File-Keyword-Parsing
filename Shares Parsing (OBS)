Private Sub CommandButton2_Click()
    Dim fileName As String
    Dim filePath As String
    Dim directoryPath As String
    Dim textLine As String
    Dim lastShares As String
    Dim ws As Worksheet
    Dim nextRowC As Long

    ' Prompt for the file name
    fileName = InputBox("Enter the name of the text file:", "File Name")
    If fileName = "" Then Exit Sub ' If no file name is entered, exit

    ' Set the directory path (you can modify this to the directory you want)
    directoryPath = "C:\Users\jbennett\Desktop\Test\" ' Replace with your directory path

    ' Construct the full file path
    filePath = directoryPath & fileName & ".txt"

    ' Check if the file exists
    If Dir(filePath) = "" Then
        MsgBox "File not found. Please check the file name and try again.", vbExclamation
        Exit Sub
    End If

    ' Set the worksheet to place data
    Set ws = ThisWorkbook.Sheets("Sheet1")

    ' Find the first empty row in column C
    nextRowC = ws.Cells(ws.Rows.Count, 3).End(xlUp).Row + 1

    ' Open the text file
    Open filePath For Input As #1

    ' Initialize lastShares as an empty string
    lastShares = ""

    ' Read through the text file line by line
    Do Until EOF(1)
        Line Input #1, textLine

        ' Check if the line contains "Shares"
        If InStr(1, textLine, "Shares", vbTextCompare) > 0 Then
            ' Find the position of "Shares" and extract everything after it
            Dim sharesPosition As Integer
            sharesPosition = InStr(1, textLine, "Shares", vbTextCompare)

            ' Extract everything after "Shares", considering multiple spaces
            lastShares = Trim(Mid(textLine, sharesPosition + Len("Shares")))
        End If

        ' Check if the line contains "Confidential"
        If InStr(1, Trim(textLine), "Confidential", vbTextCompare) > 0 Then
            ' If "Confidential" is found, write the last "Shares" value to Excel in Column C
            If lastShares <> "" Then
                ' Convert lastShares to number if needed
                If IsNumeric(Replace(lastShares, ",", "")) Then
                    ws.Cells(nextRowC, 3).Value = CDbl(Replace(lastShares, ",", "")) ' Convert to Double to write as a number
                Else
                    ws.Cells(nextRowC, 3).Value = lastShares ' Write as is if not a number
                End If

                nextRowC = nextRowC + 1
            End If
            ' Reset lastShares after writing to Excel to ensure the next "Confidential" gets a new set
            lastShares = ""
        End If
    Loop

    ' Close the text file
    Close #1

    ' Format Column C as Currency ($)
    If nextRowC > 2 Then
        ws.Range(ws.Cells(2, 3), ws.Cells(nextRowC - 1, 3)).NumberFormat = "$#,##0.00"
    End If

    MsgBox "Processing complete. The last 'Shares' values before each 'Confidential' entry have been recorded in Column C and formatted as currency."
End Sub
